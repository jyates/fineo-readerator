// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
// http:// www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//  This file tells Drill to consider this module when class path scanning.
//  This file can also include any supplementary configuration information.
//  This file is in HOCON format, see https://github.com/typesafehub/config/blob/master/HOCON.md
// for more information.
//
// Designed to be a cleaned up version of what we give the drill-standalone. Must match on the
// drill.zk properties to ensure we can reach the cluster

drill {
  classpath.scanning {
    base.classes : ${?drill.classpath.scanning.base.classes} [
      org.apache.drill.exec.expr.DrillFunc,
      org.apache.drill.exec.expr.fn.PluggableFunctionRegistry,
      org.apache.drill.exec.physical.base.PhysicalOperator,
      org.apache.drill.exec.physical.impl.BatchCreator,
      org.apache.drill.exec.physical.impl.RootCreator,
      org.apache.drill.exec.rpc.user.security.UserAuthenticator,
      org.apache.drill.exec.store.dfs.FormatPlugin,
      org.apache.drill.exec.store.StoragePlugin
    ],

    annotations += org.apache.drill.exec.expr.annotations.FunctionTemplate

    packages : ${?drill.classpath.scanning.packages} [
      org.apache.drill.exec.expr,
      org.apache.drill.exec.physical,
      org.apache.drill.exec.store,
      org.apache.drill.exec.rpc.user.security
      org.apache.drill.exec.store.mock,
      org.apache.drill.common.logical
    ]

    packages += "org.apache.drill.exec.fn.impl.testing",
    packages += "org.apache.drill.exec.physical.config",
    packages += "org.apache.drill.exec.store",
    packages += "org.apache.drill.exec.testing",
    packages += "org.apache.drill.exec.rpc.user.security.testing"
  },

  metrics : {
    context: "drillbit",
    jmx: {
      enabled : true
    },
    log: {
      enabled : false,
      interval : 60
    }
  },

  client: {
    supports-complex-types: true
  }

  jdbc:{
    batch_queue_throttling_threshold: 100
  }

  exec: {
    cluster-id: "drillbits1"
    rpc: {
      user: {
        timeout: 30,
        server: {
          port: 31010
          threads: 1
          memory: {
            reservation: 0,
            maximum: 9223372036854775807
          }
        }
        client: {
          threads: 1
        }
      },
      bit: {
        server: {
          port : 31011,
          retry:{
            count: 7200,
            delay: 500
          },
          threads: 10,
          memory: {
            control: {
              reservation: 0,
              maximum: 9223372036854775807
            },
            data: {
              reservation: 0,
              maximum: 9223372036854775807
            }
          }
        }
      },
      use.ip : false
    },
    operator: {
      packages += "org.apache.drill.exec.physical.config"
    },
    optimizer: {
      implementation: "org.apache.drill.exec.opt.IdentityOptimizer"
    },
    functions: ["org.apache.drill.expr.fn.impl"],
    storage: {
      packages += "org.apache.drill.exec.store"
      registry: "org.apache.drill.exec.store.StoragePluginRegistryImpl",
      file: {
        text: {
          buffer.size: 262144,
          batch.size: 4000
        }
      }
    },
    metrics : {
      context: "drillbit",
      log.enabled: true
    },
    zk: {
      connect: "localhost:2181",
      root: "drill/happy",
      refresh: 5,
      timeout: 5000,
      retry: {
        count: 7200,
        delay: 500
      }
    },
    http: {
      enabled: true,
      ssl_enabled: false,
      port: 8047
      session_max_idle_secs: 3600 # Default value 1hr
    },
    network: {
      start: 35000
    },
    work: {
      affinity.factor: 1.2
      max.width.per.endpoint: 2,
      global.max.width: 100,
      executor.threads: 4
    }
    sys.store.provider: {
      class: "org.apache.drill.exec.store.sys.store.provider.ZookeeperPersistentStoreProvider",
      local: {
        path: "/tmp/drill",
        write: true
      }
    },
    impersonation: {
      enabled: false,
      max_chained_user_hops: 3
    },
    trace: {
      directory: "/tmp/drill-trace",
      filesystem: "file:///"
    },
    tmp: {
      directories: ["/tmp/drill"],
      filesystem: "drill-local:///"
    },
    buffer:{
      size: "6",
      spooling: {
        delete: true,
        size: 100000000
      }
    },
    compile: {
      compiler: "DEFAULT",
      debug: true,
      janino_maxsize: 262144,
      cache_max_size: 1000
    },
    sort: {
      purge.threshold : 1000,
      external: {
        batch.size : 4000,
        spill: {
          batch.size : 4000,
          group.size : 40000,
          threshold : 40000,
          directories : [ "/tmp/drill/spill" ],
          fs : "file:///"
        }
      }
    },
    memory: {
      operator: {
        max: 20000000000,
        initial: 10000000
      },
      fragment: {
        max: 20000000000,
        initial: 20000000
      }
    },
    debug: {
      return_error_for_failure_in_cancelled_fragments: false
    }
  }

  memory: {
    debug.error_on_leak: true,
    top.max: 1000000000000
  }
}
