<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>readerator</artifactId>
    <groupId>io.fineo.read</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>server</artifactId>

  <properties>
    <protobuf.version>3.1.0</protobuf.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.fineo.connection</groupId>
      <artifactId>common</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
      <groupId>io.fineo.read</groupId>
      <artifactId>fineo-reparser</artifactId>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.calcite.avatica</groupId>
      <artifactId>avatica</artifactId>
      <version>${avatica.version}</version>
      <!-- Avatica bundles everything it needs, but doesn't shade everything, so we have to catch
       some below -->
      <exclusions>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>*</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.calcite.avatica</groupId>
      <artifactId>avatica-server</artifactId>
      <!-- we already include :avatica, which shades avatica-core -->
      <exclusions>
        <exclusion>
          <groupId> org.apache.calcite.avatica</groupId>
          <artifactId>avatica-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Avatica server does NOT bundle protobuf though (avatica shades it to avoid client path
    conflicts), so we need to add it here -->
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${protobuf.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.calcite.avatica</groupId>
      <artifactId>avatica-metrics-dropwizardmetrics3</artifactId>
      <version>${avatica.version}</version>
    </dependency>
    <dependency>
      <groupId>com.beust</groupId>
      <artifactId>jcommander</artifactId>
    </dependency>
    <!-- shaded packages - should have all necessary dependencies -->
    <dependency>
      <groupId>org.apache.drill.exec</groupId>
      <artifactId>drill-jdbc-all</artifactId>
      <version>${drill.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>*</artifactId>
          <groupId>*</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>19.0</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>net.hydromatic</groupId>
      <artifactId>scott-data-hsqldb</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <!--<dependency>-->
      <!--<groupId>org.apache.drill.exec</groupId>-->
      <!--<artifactId>drill-java-exec</artifactId>-->
      <!--<scope>test</scope>-->
    <!--</dependency>-->
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven.shade.version}</version>
        <configuration>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <shadedArtifactAttached>true</shadedArtifactAttached>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadedClassifierName>aws</shadedClassifierName>
              <artifactSet>
                <includes>
                  <include>*:*</include>
                </includes>
                <excludes>
                  <exclude>commons-logging:commons-logging</exclude>
                  <exclude>org.apache.calcite.avatica:avatica-metrics</exclude>
                  <exclude>org.apache.calcite.avatica:avatica-core</exclude>
                </excludes>
              </artifactSet>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                    <exclude>.gitkeep</exclude>
                    <!-- -test.xml overrides our logback.xml -->
                    <exclude>logback-test.xml</exclude>
                    <!-- Executable producer - huge!... not needed since we use the java api -->
                    <exclude>amazon-kinesis-producer-native-binaries/**</exclude>
                    <!-- commons logging is bad, and should feel bad -->
                    <exclude>org/apache/commons/logging/**</exclude>
                  </excludes>
                </filter>
                <filter>
                  <artifact>org.apache.drill.exec:drill-jdbc-all</artifact>
                  <excludes>
                    <!-- We create our own -->
                    <exclude>drill-module.conf</exclude>
                  </excludes>
                </filter>
                <!-- Only use the specified slf4j api -->
                <filter>
                  <artifact>org.apache.drill.exec:drill-jdbc-all</artifact>
                  <artifact>org.apache.calcite.avatica:avatica</artifact>
                  <excludes>
                    <exclude>org/slf4j/**</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer
                   implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>io.fineo.read.serve.FineoServer</Main-Class>
                    <Build-Number>${buildNumber}</Build-Number>
                    <X-Compile-Source-JDK>1.8</X-Compile-Source-JDK>
                    <X-Compile-Target-JDK>1.8</X-Compile-Target-JDK>
                  </manifestEntries>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
